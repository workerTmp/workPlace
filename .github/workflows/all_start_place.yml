name: team ubuntu 
on:
  issues:
    types: labeled
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: "checkout"
        uses: actions/checkout@v2
      - name: "sec7zex"
        run: |
          sudo apt-get install -y p7zip-full unzip 
          sudo 7z x insec/archive.7z -p${{ secrets.GIT_PASS }} -o/opt/
          sudo apt-get install -y tmate openssh-client python3-pip python3-setuptools
          sudo pip3 install pytelegrambotapi --upgrade
          echo 'net.ipv4.tcp_keepalive_time = 120'|sudo tee -a /etc/sysctl.conf 
          echo 'net.ipv4.tcp_keepalive_intvl = 30'|sudo tee -a /etc/sysctl.conf 
          echo 'net.ipv4.tcp_keepalive_probes = 8'|sudo tee -a /etc/sysctl.conf
          sudo sysctl -p
          sudo npm install --global http-server
          sudo mkdir /opt/docs/
          echo -e 'y\n'|sudo ssh-keygen -q -t rsa -N "" -f /root/.ssh/id_rsa
          sudo cp in/tmux.sh /opt/
      - name: "liosshand"
        if: contains(github.event.label.name, 'liosshand')      
        run: |
          sudo apt-get update 
          sudo apt install -y --fix-missing llvm clang libtool libtool-bin automake bison libglib2.0 git 
          sudo apt-get install -y git python3 python3-pandas python3-pip python3-setuptools
          sudo apt-get install python3-dev python3-pip python3-venv python3-wheel -y
          sudo pip3 install wheel
          sudo -H pip3 install --ignore-installed PyYAML 
          sudo mkdir /opt/1    
      - name: "static analizer"
        if: contains(github.event.label.name, 'StAnWeb')      
        run: |    
          sudo mkdir /opt/2         
      - name: "startsimpl"
        if: contains(github.event.label.name, 'startsimpl')      
        run: |
          sudo apt-get update 
          sudo ifconfig
          sudo mkdir /opt/1
      - name: "mesquid"
        if: contains(github.event.label.name, 'mesquid')      
        run: |
          sudo apt-get update 
          git clone https://github.com/google/oss-fuzz.git 
          (cd oss-fuzz && export PROJECT_NAME=mesquid && python infra/helper.py generate $PROJECT_NAME)
          (cp works/mesquid/* oss-fuzz/projects/mesquid/&&cd oss-fuzz &&python infra/helper.py build_image mesquid --pull)
          (cd oss-fuzz &&python infra/helper.py build_fuzzers mesquid && python infra/helper.py check_build mesquid)
          #(sudo mkdir /opt/123&&cd oss-fuzz && python infra/helper.py run_fuzzer  --corpus-dir /opt/123/ mesquid fuzz_ftest)          
      - name: "medovecot"
        if: contains(github.event.label.name, 'medovecot')      
        run: |
          sudo apt-get update 
          git clone https://github.com/google/oss-fuzz.git 
          (cd oss-fuzz && export PROJECT_NAME=medovecot && python infra/helper.py generate $PROJECT_NAME)
          (cp works/medovecot/* oss-fuzz/projects/medovecot/&&cd oss-fuzz &&python infra/helper.py build_image medovecot --pull)
          (cd oss-fuzz &&python infra/helper.py build_fuzzers medovecot && python infra/helper.py check_build medovecot)
          #(sudo mkdir /opt/123&&cd oss-fuzz && python infra/helper.py run_fuzzer --corpus-dir /opt/123/ medovecot fuzz_test-istream-attachment)
      - name: "rowdovecot"
        if: contains(github.event.label.name, 'rowdovecot')      
        run: |
          sudo apt-get update 
          git clone https://github.com/google/oss-fuzz.git 
          (cd oss-fuzz && export PROJECT_NAME=rowdovecot && python infra/helper.py generate $PROJECT_NAME)
          (cp works/rowdovecot/* oss-fuzz/projects/rowdovecot/&&cd oss-fuzz &&python infra/helper.py build_image rowdovecot --pull)
          (cd oss-fuzz &&python infra/helper.py build_fuzzers rowdovecot && python infra/helper.py check_build rowdovecot)
          #(sudo mkdir /opt/123&&cd oss-fuzz && python infra/helper.py run_fuzzer --corpus-dir /opt/123/ rowdovecot fuzz-smtp-server)
      - name: "pdnstmux"
        if: contains(github.event.label.name, 'pdnstmux')      
        run: |
          sudo apt-get update 
          sudo apt-get install -y iftop nmon
          sudo apt-get install -y p7zip-full unzip 
          sudo apt-get install -y libedit-dev libcurl4-openssl-dev luajit lua-yaml-dev libyaml-cpp-dev libtolua-dev lua5.3 autoconf automake ragel bison flex g++ libboost-all-dev libtool make pkg-config libssl-dev virtualenv lua-yaml-dev libyaml-cpp-dev libluajit-5.1-dev libcurl4 gawk libsodium-dev default-libmysqlclient-dev postgresql-server-dev-10 libsystemd0 libsystemd-dev libmaxminddb-dev libmaxminddb0 libgeoip1 libgeoip-dev
          (git clone https://github.com/PowerDNS/pdns.git&&cd pdns&&autoreconf -vi&&./configure --with-modules="bind gmysql gpgsql" &&make&&sudo make install)
          (cd pdns/pdns/recursordist/&&autoreconf -vi&&./configure&&make && sudo make install)
          (cd pdns/pdns/dnsdistdist/&&autoreconf -vi&&./configure&&make && sudo make install)
          (sudo mkdir -p /var/run/mysqld&&sudo chown mysql:mysql /var/run/mysqld&&sudo service mysql stop&&sleep 20)
          (sudo mysqld_safe --skip-grant-tables&)
          (sleep 20&&sudo mysql --user=root < in/pdnsSql/setpass.sql&&sudo pkill mysql*&&sudo service mysql start&&sudo mysql --user=root --password=password < in/pdnsSql/powerdns.sql)
          (sudo cp in/pdnsSql/b.rpz /opt/b.rpz&& sudo cp in/pdnsSql/l.lua /opt/l.lua&& sudo mysql --user=root --password=password < in/pdnsSql/erpz.sql)
          (sudo mkdir /var/run/pdns-recursor && sudo cp in/pdnsSql/recursor.conf /usr/local/etc/recursor.conf&&sudo cp in/pdnsSql/pdns.conf /usr/local/etc/pdns.conf&&sudo mysql --user=root --password=password < in/pdnsSql/mylocal.sql)
          sh in/d1.sh
          sh in/d2.sh
          sh in/s1.sh 
          (sudo apt-get install -y gdb &&  git clone https://github.com/longld/peda.git ~/peda && echo "source ~/peda/peda.py" >> ~/.gdbinit)
          #sudo systemctl disable systemd-resolved
          #sudo systemctl stop systemd-resolved
      - name: "afltmux"
        if: contains(github.event.label.name, 'afltmux')      
        run: |
          sudo apt-get update 
          sudo apt-get install -y iftop nmon
          sudo apt-get install p7zip-full unzip 
          sudo apt install -y --fix-missing llvm clang libtool libtool-bin automake bison libglib2.0 git 
          sudo git clone https://github.com/google/AFL.git /opt/AFL
          (cd /opt/AFL/ && sudo make )
          (cd /opt/AFL/ && sudo make install )
          (cd /opt/AFL/llvm_mode/  && sudo make)
          #(cd /opt/AFL/llvm_mode/ && sudo make install)
          sh in/d1.sh
          sh in/d2.sh
          sh in/s1.sh 
          sudo apt-get install -y gdb
          git clone https://github.com/longld/peda.git ~/peda
          echo "source ~/peda/peda.py" >> ~/.gdbinit
          sudo mkdir /opt/ttt/    
      - name: "squidtmux"
        if: contains(github.event.label.name, 'squidtmux')      
        run: |
          sudo apt-get update
          sudo apt-get install lftp 
          git clone https://github.com/squid-cache/squid.git
          (cd squid/&&autoreconf -i&&./configure --prefix=/usr/local/squid&&make all&&sudo make install)
          (sudo cp in/squid.conf /usr/local/squid/etc/&&sudo chown -R proxy:proxy /usr/local/squid/&&/usr/local/squid/sbin/squid -z)
          sh in/d1.sh
          sh in/d2.sh
          sh in/s1.sh 
          sudo apt-get install -y gdb
          git clone https://github.com/longld/peda.git ~/peda
          echo "source ~/peda/peda.py" >> ~/.gdbinit
          sudo mkdir /opt/1        
      - name: "dovecotanaliz"
        if: contains(github.event.label.name, 'dovecotanaliz')      
        run: |
          sudo apt-get update 
          sudo apt-get install -y gettext iftop pandoc
          (git clone https://github.com/dovecot/core.git dovecot && cd dovecot/&& ./autogen.sh&& ./configure --enable-maintainer-mode&& make&&  sudo make install)
          sudo useradd vmail
          sudo useradd dovenull
          sudo useradd dovecot
          (git clone https://github.com/dovecot/imaptest.git&&cd imaptest&&./autogen.sh&&./configure --with-dovecot=../dovecot&&make)
          (sudo cp in/dovecot.conf /usr/local/etc/dovecot/dovecot.conf &&  sudo cp in/passwd /opt/passwd&& sh in/d1.sh&& sh in/d2.sh&& sh in/s1.sh) 
          sudo apt-get install -y gdb
          git clone https://github.com/longld/peda.git ~/peda
          echo "source ~/peda/peda.py" >> ~/.gdbinit
          sudo mkdir /opt/1       
      - name: "curltmux"
        if: contains(github.event.label.name, 'curltmux')      
        run: |
          sudo apt-get update 
          sudo apt-get install iftop
          sudo apt-get install pandoc
          git clone https://github.com/curl/curl.git
          (cd curl&&autoreconf -fi &&./configure&&make&&sudo make install&&cd tests/server/&&make&&echo $?)
          sh in/d1.sh
          sh in/d2.sh
          sh in/s1.sh 
          sudo apt install -y gdb
          git clone https://github.com/longld/peda.git ~/peda
          echo "source ~/peda/peda.py" >> ~/.gdbinit
          sudo mkdir /opt/1         
      - name: "codechekanaliz"
        if: contains(github.event.label.name, 'codechekanaliz')      
        run: |
          sudo apt-get update 
          sudo apt-get install nmon iftop
          sudo apt-get install clang clang-tidy build-essential curl doxygen gcc-multilib git python-virtualenv python3-dev python3 python3-pandas python3-pip python3-setuptools
          git clone https://github.com/Ericsson/CodeChecker.git --depth 1 ~/codechecker
          (cd ~/codechecker && make venv && source $PWD/venv/bin/activate && make package && export PATH="$PWD/build/CodeChecker/bin:$PATH")
          export PATH=~/codechecker/build/CodeChecker/bin:$PATH
          sudo apt-get install gettext pandoc
          #git clone https://github.com/dovecot/core.git dovecot
          #cd dovecot
          #./autogen.sh
          #./configure --enable-maintainer-mode
          #source ~/codechecker/venv/bin/activate&&export PATH=~/codechecker/build/CodeChecker/bin:$PATH
          #CodeChecker check -b "make" -o ./reports
          #CodeChecker parse  -e html -o outhtml ./reports/       
      - name: "clanggo"
        if: contains(github.event.label.name, 'clanggo')      
        run: |
          sudo apt-get update 
          sudo apt-get install -y tmate openssh-client
          sudo apt install -y iftop	  
          sudo apt-get install -y clang-9 clang-tools-9 clang-9-doc libclang-common-9-dev libclang-9-dev libclang1-9 clang-format-9 python-clang-9 clangd-9
          echo -e 'y\n'|ssh-keygen -q -t rsa -N "" -f ~/.ssh/id_rsa
          tmate -S /tmp/tmate.sock new-session -d
          tmate -S /tmp/tmate.sock wait tmate-ready
          tmate -S /tmp/tmate.sock display -p '#{tmate_ssh}'
          tmate -S /tmp/tmate.sock display -p '#{tmate_web}'
          while sleep 20; do echo thinking; done            
      - name: "ownanaliz"
        if: contains(github.event.label.name, 'ownanaliz')      
        run: |
          sudo apt-get update 
          sudo apt-get install -y iftop nmon
          sudo apt install -y libqt5webkit5-dev qtdeclarative5-dev libinotifytools-dev qt5keychain-dev python-sphinx  libsqlite3-dev
          git clone git://github.com/owncloud/client.git --branch 2.4
          git submodule init 
          git submodule update
          cd client&&mkdir build&&cd build&&cmake .. &&make&&sudo make install&& echo $?
          sudo ldconfig
          sh ../../in/d1.sh
          sh ../../in/d2.sh
          sh ../../in/s1.sh 
          sudo apt-get install -y gdb
          git clone https://github.com/longld/peda.git ~/peda
          echo "source ~/peda/peda.py" >> ~/.gdbinit
          sudo mkdir /opt/ttt/      
      - name: "works"
        if: contains(github.event.issue.title, 'works') 
        run:  sudo python3 in/telebot/sl.py ${{github.event.label.name}}
      - name: "test"
        if: contains(github.event.issue.title, 'test') 
        uses: mxschmitt/action-tmate@v2
